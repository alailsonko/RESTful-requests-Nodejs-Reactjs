version: '3'

services:
  backend:
    build:
      context: ./server
    image: messenger-clone/backend
    depends_on:
      - database-mc
    command: ["yarn", "start:dev"]
    volumes:
      - ./server:/app
    env_file:
      - ./server/.env.docker
    deploy:
      mode: replicated
      replicas: 2

  nginx:
    image: nginx:latest
    ports:
      - "4000:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - backend

  frontend:
    container_name: frontend
    build:
      context: ./web
    image: messenger-clone/frontend
    ports:
      - "3000:3000"
    command: ["yarn", "start"]
    depends_on:
      - backend
    volumes:
      - ./web:/app

  database-mc:
    container_name: database-mc
    hostname: database-mc
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      command: |
        postgres 
        -c wal_level=replica 
        -c hot_standby=on 
        -c max_wal_senders=10 
        -c max_replication_slots=10 
        -c hot_standby_feedback=on
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./database/00_init.sql:/docker-entrypoint-initdb.d/00_init.sql

  database-replica-mc:
    container_name: database-replica-mc
    hostname: database-replica-mc
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: |
        bash -c "
        until rm -rf /var/lib/postgresql/data/* && pg_basebackup -U postgres --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=database-mc --port=5432
        do
        echo 'Waiting for primary to connect...'
        sleep 1s
        done
        echo 'Backup done, starting replica...'
        chown -R postgres:postgres /var/lib/postgresql/data
        chmod 0700 /var/lib/postgresql/data
        gosu postgres postgres
        "
    depends_on:
      - database-mc

volumes:
  pg_data:
